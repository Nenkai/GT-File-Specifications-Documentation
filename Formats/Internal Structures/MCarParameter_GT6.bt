//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: MCarParameter structure for GT6
//   Authors: Nenkai#9075
//   Version: 
//   Purpose: Used to transmit car information in events (i.e prize cars with installed parts), saved in saves aswell
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
BigEndian();

// Credits Razerman; Logic originally found used in ghidra, seen used in the custom tracks bts
string OutputDateTime( uint s )
{
    uint rawDateTime = s;
    uint Year = (((rawDateTime >> 0x1a)) + 1970);
    uint Month = (((rawDateTime >> 0x16)) & 15); 
    uint Day = (((rawDateTime >> 0x11)) & 0x1f);
    uint Hour = (((rawDateTime >> 12)) & 0x1f);
    uint Minute = (((rawDateTime >> 6)) & 0x3f);
    uint Second = ((rawDateTime) & 0x3f);
    string Year_s;
    string Month_s;
    string Day_s;
    string Hour_s;
    string Minute_s;
    string Second_s;
    string Formatted_DateTime;
    SPrintf ( Year_s, "%d", Year );
    SPrintf ( Month_s, "%02d", Month );
    SPrintf ( Day_s, "%02d", Day );
    SPrintf ( Hour_s, "%02d", Hour );
    SPrintf ( Minute_s, "%02d", Minute );
    SPrintf ( Second_s, "%02d", Second );
    return Day_s+"/"+Month_s+"/"+Year_s+" "+Hour_s+":"+Minute_s;
}

struct MCarParameter
{   
    int version;
    byte unk;
    byte unk50[3];
    int odometer;

    // Cleared by "Overhall Engine"
    int engine_life;

    // Cleared by "Overhall Engine"
    float oil_life;
    int body_life;
    byte dirtiness100;
    byte rainX; // Goes away when custom one is set
    byte body_coating;
    byte unk;
    int everlasting;
    short unk;
    int _empty_;
    short unk;
    short unk;
    float unk;
    short unk;

    byte _empty__[12];
    int unk;
    int obtain_date <comment=OutputDateTime>;
    short win_count;
    short unk;
    short unk;
    short unk;
    
    uint _empty_;
    ushort _empty_;
    short unk;
    short _empty_;

    short frontwheelex;
    short rearwheelex;
    short wheel_inchup_related;
    int unk4[3];
    int frontTireComp;
    int fronttire;
    int rearTireComp;
    int reartire;
    int brake;
    int brakeController;
    int chassis;
    int engine;
    int drivetrain;
    int gear;
    int suspension;
    int lsd;
    int unk;
    int lightweight;
    int racingmodify;
    int displacement;
    int computer;
    int natune;
    int turbineKit;
    int flywheel;
    int clutch;
    int propellerShaft;
    int muffler;
    int intercooler;
    int ascc;
    int tcsc;
    int supercharger;
    int intake_manifold;
    int exhaust_manifold;
    int catalyst;
    int air_cleaner;
    int NOS;
    int windowReduction;
    int carbonBonnet;
    int bodyKit;
    int unk;
    int aero_other;
    int wing;
    int unk12[3];

    short GearReverse;
    short Gear1;
    short Gear2;
    short Gear3;
    short Gear4;
    short Gear5;
    short Gear6;
    short Gear7;
    short Gear8;
    short Gear9;
    short Gear10;
    short Gear11;
    short FinalGearRatio;
    byte MaxSpeed_10;
    short GearLastFinal;
    byte Param4WDMaybe;
    byte FrontABSMaybe;
    byte RearABSMaybe;
    short downforceFront;
    short downforceRear;
    byte turbo_boost1;
    byte turbo_peakRpm1;
    byte turbo_response1;
    byte turbo_boost2;
    byte turbo_peakRmp2;
    byte turbo_response2;
    byte FrontCamber;
    byte RearCamber;
    short FrontRideheight;
    short RearRideheight;
    signed byte FrontToe;
    signed byte RearToe;
    short FrontSpringRate;
    short RearSpringRate;
    int unk;
    byte FrontDamperF1B;
    byte FrontDamperF2B;
    byte FrontDamperF1R;
    byte FrontDamperF2R;
    byte RearDamperF1B;
    byte RearDamperF2B;
    byte RearDamperF1R;
    byte RearDamperF2R;
    byte FrontStabilizer;
    byte RearStabilizer;
    byte FrontLSDParam;
    byte RearLSDParam;
    byte FrontLSDParam2;
    byte RearLSDParam2;
    byte FrontLSDParam3;
    byte RearLSDParam3;
    byte tcsc_UserValueDF;
    byte ascc_VSCParamLevel;
    byte ascc_VSCParam1DF;
    byte ascc_VUCParamLevel;
    byte ascc_VUCParam1DF;
    unsigned byte ballastWeight;
    byte ballastPosition;
    byte unk;
    short unk;
    short weightModifyRatio;
    short powerModifyRatio;
    byte nosTorqueVolume;
    byte unk;
    byte FrontBrakeBalanceLevel;
    byte RearBrakeBalanceLevel;
    byte ABSCorneringControlLevel;
    byte unk;
    short unk;
    short restrictorPermill;
    short PowerLimiter;
    
    int horn_sound_id;
    byte wheel_color; // ?
    
    short bodyPaintID;
    short wheelPaintID;
    short brakePaintID;
    short customRearWingPaintID;

    short front_wheel_width;
    short front_wheel_diameter;
    short rear_wheel_width;
    short rear_wheel_diameter;
    short unk;

    byte wheel_inchup;
    byte decken_preface;
    byte decken_number;
    byte decken_type; // Flag?

    byte test5[21];
    
    byte unkCustomWing1;
    byte unkCustomWing2;
    byte unkCustomWing3;
    byte customWingStays;
    byte unkCustomWing5;
    short wingWidthOffset;
    short wingHeightOffset;
    short wingAngleOffset;

    byte test50[4];

    /* 
        Not flags
        Comfort Hard = 00 00
        Comfort Medium = 02 20
        Comfort Soft = 04 40
        Sports Medium = 08 80
        Racing Hard = 0E E0
        Racing Medium = 11 00
        Racing Soft = 13 20
        Intermediate = 17 60
        Heavy Wet = 19 80
        Dirt = 1B A0
        Snow = 1D C0
    */

    byte unk; // 0x60 when racing brake calipers installed
    byte unk; // 0x02 when sports exhaust installed, 0x08 = Carbon Bonnet installed?
    byte unk;

    short customMeterData;
    short customMeterUnk; // -1 when installed? DD FF when two installed?
    uint customMeter1Color;
    
    short unkToeAngle1;
    short unkToeAngle2;
    byte test6[2];

    /*
        0x04 = Racing Brake Calipers
    */
    byte purchaseFlagA;

    /*
        0x02 = Racing Suspension: Soft
        0x04 = Racing Suspension: Hard
        0x08 = Suspension: Rally
        0x10 = Custom
    */
    byte purchaseFlagB;

    /*
        0x08 = Stage 1 Weight Reduction
        0x10 = Stage 2 Weight Reduction
        0x20 = Stage 3 Weight Reduction
    */
    byte purchaseFlagC;
    
    /*
        0x80 = Five Speed Transmission
    */
    byte purchaseFlagD;

    /*
        0x02 = Fully Custom Transmission
        0x08 = Stage 1 Engine
        0x10 = Stage 2 Engine
        0x20 = Stage 3 Engine
    */
    byte purchaseFlagE;

    /* 
        0x02 = Low RPM Turbo
        0x04 = Mid RPM Turbo
        0x08 = High RPM Turbo
    */
    byte purchaseFlagF;

    /*
        0x08 = Sports Computer
    */
    byte purchaseFlagG;

    /*
        0x08 = Sports Exhaust
        0x10 = Semi-Racing Exhaust
        0x20 = Racing Exhaust
        0x80 = Twin-Plate Clutch
    */
    byte purchaseFlagH;

    /*
        0x01 = Triple-Plate Clutch
        0x80 = Carbon Propeller Shaft
    */
    byte purchaseFlagI;

    /*
       0x02 = Custom LSD
       0x80 = Comfort Hard
    */
    byte purchaseFlagJ;

    /* 
        0x02 = Comfort Soft
        0x04 = Sports Hard
        0x08 = Sports Medium
        0x10 = Sports Soft
        0x20 = Sports Super Soft
        0x40 = Racing Hard
        0x80 = Racing Medium
    */
    byte purchaseFlagK;

    /* 
        0x01 = Racing Soft
        0x02 = Racing Super Soft
        0x04 = Intermediate
        0x08 = Heavy Wet
        0x10 = Dirt
        0x40 = Comfort Hard
        0x80 = Comfort Medium
    */
    byte purchaseFlagL;

    /* 
        //0x01 = Comfort Medium   FIX ME
        //0x02 = Comfort Soft  FIX ME
    
        0x02 = Sports Hard
        0x04 = Sports Medium
        0x08 = Sports Soft
        0x10 = Sports Super Soft
        0x20 = Racing Hard
        0x40 = Racing Medium
        0x80 = Racing Soft
    */
    byte purchaseFlagM;
    
    /* 
        0x01 = Racing Super Soft
        0x02 = Intermediate
        0x04 = Heavy Wet
        0x08 = Dirt
        0x10 = Snow
    */
    byte purchaseFlagN;

    // 0x1AF related to brake? Racing brake kit bumped 0x17 to 0x77

    /*
        0x01 = Intake Tuning
        0x04 = Isometric Exhaust Manifold
        0x10 = Sports Catalyst
    */
    byte purchaseFlagO;

    /*
      0x40 = Window Reduction
    */
    byte purchaseFlagP;

    /*
      0x01 = Carbon Bonnet
      0x02 = Carbon Bonnet (Body Color)
    */
    byte purchaseFlagQ;

    /*
        0x10 = NOS
    */
    byte purchaseFlagR;

} cp;
