//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: TMSM - Music Library Information for GT7
//   Authors: Nenkai#9075
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

typedef struct
{
    int TimeMS;
    byte b;
    short c;
    short d;
    short e;

    if (tmsm.Version >= 10)
       byte f;

} MusicRallyPoint <optimize=false>;

typedef struct
{
    string unkStr;
    short nPoints;
    
    if (nPoints > 0)
        MusicRallyPoint points[nPoints];
} MusicRallyInfo <optimize=false>;

typedef struct
{
    if (tmsm.Version >= 6)
        short ID;

    string Label;
    string Name;
    string Artist;
    string Genre;

    short nMusicRallyInfo;

    if (tmsm.Version < 8)
    {
        int a;

        if (tmsm.Version >= 5)
        {
            short b; 
            short c;
        }
        
        if (tmsm.Version >= 7)
            short d;
    }
    else
    {
        if (nMusicRallyInfo > 0)
        {
            MusicRallyInfo musicRallyInfos[nMusicRallyInfo];
        }

        if (nMusicRallyInfo != 0)
        {
            Printf("Music Rally Track: " + Name + " (" + Label + ")\n");
        }
    }

    
    short StartMS;

    if (tmsm.Version >= 2)
        int EndMS;

    if (tmsm.Version >= 13) 
    {
        short unk_V13;
        short unk2_V13;
    }

    if (tmsm.Version >= 11)
    {
        byte unk_V11;
    }

    if (tmsm.Version >= 14)
    {
        byte unk_V14;
    }

    if (tmsm.Version >= 9)
    {
        byte unk_V9;
    }
    
} Music;

string PrintMusic(Music& music)
{
    string str = "";
    if (music.nMusicRallyInfo > 0)
        str += "[R] ";

    str += music.Name + " (" + music.Label + ")";
    return str;
}

typedef struct
{
    string Name;
    short nName;

    if (nName > 0)
    {
        struct
        {
            string name;
        } names[nName] <optimize=false>;
    }

    string unkStr;
    if (tmsm.Version >= 12)
        string unkStr_V12;

    byte unk;

    if (tmsm.Version >= 3)
        byte unk_V4;

    if (tmsm.Version >= 4)
        byte unk2_V4;
    

} Playlist <optimize=false>;

string PrintPlaylist(Playlist& playlist)
{
    return playlist.Name;
}

struct TMSM
{
    char Magic[4];
    int Version;

    short nTrackCount;
    Music m[nTrackCount] <optimize=false, bgcolor=cYellow, comment=PrintMusic>;

    short nPlaylistCount;
    Playlist playlists[nPlaylistCount] <bgcolor=cLtBlue, comment=PrintPlaylist>;
} tmsm;
