//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: TXS3 Gran Turismo Image Header Specifics
//   Authors: Nenkai#9075
//   Version: 1.0
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef enum <ubyte> 
{
    DXT10_MORTON = 0x85,
    DXT1 = 0x86,
    DXT1_2 = 0xA6,
    DXT3 = 0x87,
    DXT3_2 = 0xA7,
    DXT5 = 0x88,
    DXT5_2 = 0xA8,
    DXT10 = 0xA5,
} PixelFormat;

typedef struct 
{
    BitfieldDisablePadding();
    uint head0;
    uint offset;
    byte pad0;
    byte mipmap;
    PixelFormat imageFormat;

    byte dim : 4;
    byte noborder : 1;
    byte cubemap : 1;
    byte location : 2;

    byte zfunc : 5;
    byte gamma : 8;
    byte signExt : 4;
    byte unk : 3;
    byte wrap_t : 4;
    byte useAniso : 3;
    byte wrap_s : 5;
    
    byte enable : 1;
    short lodMin : 12;
    short lodMax : 12;
    byte maxAniso : 3;
    byte pad1 : 4;
    
    int remap;

    byte signedARGB : 5;
    byte mag : 3;
    byte min : 8;
    byte convultion : 3;
    short lodBias : 12;

    ushort Width;
    ushort Height;
    uint borderColor;
    uint head1;
    uint depth : 12;
    uint pitch : 20;
    uint reserved0;
    uint reserved1;
    uint what6;
    uint imageID;
    uint what7;
    uint ImageNameOffset <format=hex>;
} ImageMetadata;

typedef struct ImageData
{
    uint ImageOffset <format=hex, fgcolor=cRed>;
    uint ImageSize <format=hex>;
    byte _two_; // 0x20 flag when running
    PixelFormat ImageFormat;
    byte MipmapCount;
    byte _two2_;
    ushort ImageWidth;
    ushort ImageHeight;
    ushort Unk;
    ushort Unk2;

    byte pad[0x0C];
} ImageData;

typedef struct (int arrSize)
{
    ImageMetadata images[arrSize];
} ImageMetadataMap;

typedef struct (int arrSize)
{
    ImageData images[arrSize];
} ImageDataMap;

// Main header is 0x40
struct TXS3 {
    char Magic[4];
    if (Magic[0] == '3')
        LittleEndian();
    else
        BigEndian();

    uint FileSize <format=hex>;
    uint BaseFilePos <format=hex>;
    uint Unk1;
    uint Unk2;
    ushort TextureRenderParamCount;
    ushort TexturemageInfoCount;
    uint TextureRenderParamOffset <format=hex, fgcolor=cRed>;
    uint TextureInfoOffset <format=hex, fgcolor=cRed>;

    // Some extra offsets may appear beyond 0x20
    // Unsupported for now (are they even used?)

    FSeek(TextureRenderParamOffset);
    ImageMetadataMap imageMetas(TextureRenderParamCount);

    FSeek(TextureInfoOffset);
    ImageDataMap data(TexturemageInfoCount);
} txs3;