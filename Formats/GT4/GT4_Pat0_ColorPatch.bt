//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: GT4 Color Patch
//   Authors: Nenkai
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: .pat
//  ID Bytes: 50 61 74 30
//   History: 
//------------------------------------------------

LittleEndian();

//---------------------------------------------
// Random color
//---------------------------------------------
local uint __RandomSeed = 0xDEADBABE;
local uint __RandomBit = 0;
local uint __RandomCount = 0;
 
uint MyRandom( uint to )
{
    ++__RandomCount;
    __RandomBit  = ( (__RandomSeed >> 0 ) ^ ( __RandomSeed >> 2 ) ^ ( __RandomSeed >> 3 ) ^ ( __RandomSeed >> 5 ) ) & 1;
    __RandomSeed = ( ( ( ( __RandomBit << 15 ) | ( __RandomSeed >> 1 ) ) + ( 0xBABE / __RandomCount ) ) % to );

    while( __RandomSeed < 0 )
        __RandomSeed += to;

    return __RandomSeed;
}

uint RandomColor()
{
    return MyRandom( 0xFFFFFFFF );
}

void SetRandomBackColor()
{
    SetBackColor( RandomColor() );
}


typedef struct
{
    struct 
    {
        uint Magic <format=hex>;
        uint RelocPtr;
        uint __empty__[2];
        short PaintCount <fgcolor=cGreen>;
        short PatchCount <fgcolor=cGreen>;
        int __empty2__[3];
    } Header <bgcolor=cPurple, size=0x20>;   
    
    int PatchOffsets[Header.PaintCount * Header.PatchCount] <format=hex, fgcolor=cRed>;
    
    local int i = 0;
    for (i = 0; i < Header.PaintCount; i++)
    {
        struct
        {
            local int j = 0;
            for (j = 0; j < Header.PatchCount; j++)
            {
                FSeek(PatchOffsets[(i * Header.PatchCount) + j]);
                struct
                {
                    SetRandomBackColor();
                    
                    int PatchModelSetTargetOffset <format=hex>;
                    int PatchSize <format=hex>;
                    byte PatchData[PatchSize];
                } Patch <bgcolor=cRed>;
            }
            

        } VariationPatch;
    }
} ColorPatch;

if (ReadUInt() == 0x30746150)
    ColorPatch ColorPatch_;
