//------------------------------------------------
//--- 010 Editor v15.0 Binary Template
//
//      File: Sony PS3 GCM Enums
//   Authors: Nenkai
//   Version:
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#ifndef CELL_GCM_H
#define CELL_GCM_H

typedef enum <byte> 
{
   CELL_GCM_VERTEX_S1		= (1),
   CELL_GCM_VERTEX_F		= (2),
   CELL_GCM_VERTEX_SF		= (3),
   CELL_GCM_VERTEX_UB		= (4),
   CELL_GCM_VERTEX_S32K	= (5),
   CELL_GCM_VERTEX_CMP		= (6),
   CELL_GCM_VERTEX_UB256	= (7),

} CELL_GCM_VERTEX_TYPE;

typedef enum <ubyte> 
{
    CELL_GCM_TEXTURE_B8						= 0x81,
	CELL_GCM_TEXTURE_A1R5G5B5				= 0x82,
	CELL_GCM_TEXTURE_A4R4G4B4				= 0x83,
	CELL_GCM_TEXTURE_R5G6B5					= 0x84,
	CELL_GCM_TEXTURE_A8R8G8B8				= 0x85,
	CELL_GCM_TEXTURE_COMPRESSED_DXT1		= 0x86,
	CELL_GCM_TEXTURE_COMPRESSED_DXT23		= 0x87,
	CELL_GCM_TEXTURE_COMPRESSED_DXT45		= 0x88,
	CELL_GCM_TEXTURE_G8B8					= 0x8B,
	CELL_GCM_TEXTURE_R6G5B5					= 0x8F,
	CELL_GCM_TEXTURE_DEPTH24_D8				= 0x90,
	CELL_GCM_TEXTURE_DEPTH24_D8_FLOAT		= 0x91,
	CELL_GCM_TEXTURE_DEPTH16				= 0x92,
	CELL_GCM_TEXTURE_DEPTH16_FLOAT			= 0x93,
	CELL_GCM_TEXTURE_X16					= 0x94,
	CELL_GCM_TEXTURE_Y16_X16				= 0x95,
	CELL_GCM_TEXTURE_R5G5B5A1				= 0x97,
	CELL_GCM_TEXTURE_COMPRESSED_HILO8		= 0x98,
	CELL_GCM_TEXTURE_COMPRESSED_HILO_S8		= 0x99,
	CELL_GCM_TEXTURE_W16_Z16_Y16_X16_FLOAT	= 0x9A,
	CELL_GCM_TEXTURE_W32_Z32_Y32_X32_FLOAT	= 0x9B,
	CELL_GCM_TEXTURE_X32_FLOAT				= 0x9C,
	CELL_GCM_TEXTURE_D1R5G5B5				= 0x9D,
	CELL_GCM_TEXTURE_D8R8G8B8				= 0x9E,
	CELL_GCM_TEXTURE_Y16_X16_FLOAT			= 0x9F,
	CELL_GCM_TEXTURE_COMPRESSED_B8R8_G8R8	= 0xAD,
	CELL_GCM_TEXTURE_COMPRESSED_R8B8_R8G8	= 0xAE,
} CELL_GCM_TEXTURE_FORMAT;

typedef enum <byte>
{
  CELL_GCM_TEXTURE_CONVOLUTION_NONE,
  CELL_GCM_TEXTURE_CONVOLUTION_QUINCUNX,
  CELL_GCM_TEXTURE_CONVOLUTION_GAUSSIAN,
  CELL_GCM_TEXTURE_CONVOLUTION_QUINCUNX_ALT,

} CELL_GCM_TEXTURE_CONVOLUTION;

typedef enum <byte>
{
  CELL_GCM_TEXTURE_MIN_NONE,
  CELL_GCM_TEXTURE_NEAREST,
  CELL_GCM_TEXTURE_LINEAR,
  CELL_GCM_TEXTURE_NEAREST_NEAREST,
  CELL_GCM_TEXTURE_LINEAR_NEAREST,
  CELL_GCM_TEXTURE_NEAREST_LINEAR,
  CELL_GCM_TEXTURE_LINEAR_LINEAR,
  CELL_GCM_TEXTURE_CONVOLUTION_MIN ,
} CELL_GCM_TEXTURE_MIN;

typedef enum <byte>
{
  CELL_GCM_TEXTURE_MAG_NONE,
  CELL_GCM_TEXTURE_NEAREST_MAG,
  CELL_GCM_TEXTURE_LINEAR_MAG,
  CELL_GCM_TEXTURE_CONVOLUTION_MAG,
} CELL_GCM_TEXTURE_MAG;

typedef enum <byte>
{
   CELL_GCM_TEXTURE_WRAP_NONE,
   CELL_GCM_TEXTURE_WRAP,
   CELL_GCM_TEXTURE_MIRROR,
   CELL_GCM_TEXTURE_CLAMP_TO_EDGE,
   CELL_GCM_TEXTURE_BORDER,
   CELL_GCM_TEXTURE_CLAMP,
   CELL_GCM_TEXTURE_MIRROR_ONCE_CLAMP_TO_EDGE,
   CELL_GCM_TEXTURE_MIRROR_ONCE_BORDER,
   CELL_GCM_TEXTURE_MIRROR_ONCE_CLAMP,
} CELL_GCM_TEXTURE_WRAP;

typedef enum <byte>
{
  	CELL_GCM_TEXTURE_MAX_ANISO_1	= (0),
	CELL_GCM_TEXTURE_MAX_ANISO_2	= (1),
	CELL_GCM_TEXTURE_MAX_ANISO_4	= (2),
	CELL_GCM_TEXTURE_MAX_ANISO_6	= (3),
	CELL_GCM_TEXTURE_MAX_ANISO_8	= (4),
	CELL_GCM_TEXTURE_MAX_ANISO_10	= (5),
	CELL_GCM_TEXTURE_MAX_ANISO_12	= (6),
	CELL_GCM_TEXTURE_MAX_ANISO_16	= (7),
} CELL_GCM_TEXTURE_MAX_ANISO;

typedef enum <byte>
{
    CELL_GCM_LOCATION_LOCAL = 0,
    CELL_GCM_LOCATION_MAIN = 1,
} CELL_GCM_LOCATION;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_DIMENSION_1 = 1,
    CELL_GCM_TEXTURE_DIMENSION_2 = 2,
    CELL_GCM_TEXTURE_DIMENSION_3 = 3
} CELL_GCM_TEXTURE_DIMENSION;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_ZFUNC_NEVER	= 0,
	CELL_GCM_TEXTURE_ZFUNC_LESS		= 1,
	CELL_GCM_TEXTURE_ZFUNC_EQUAL	= 2,
	CELL_GCM_TEXTURE_ZFUNC_LEQUAL	= 3,
	CELL_GCM_TEXTURE_ZFUNC_GREATER	= 4,
	CELL_GCM_TEXTURE_ZFUNC_NOTEQUAL	= 5,
	CELL_GCM_TEXTURE_ZFUNC_GEQUAL	= 6,
	CELL_GCM_TEXTURE_ZFUNC_ALWAYS	= 7,
} CELL_GCM_TEXTURE_ZFUNC;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_BORDER_TEXTURE = 0,
    CELL_GCM_TEXTURE_BORDER_COLOR = 1,
} CELL_GCM_TEXTURE_BORDER;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_UNSIGNED_REMAP_NORMAL,
    CELL_GCM_TEXTURE_UNSIGNED_REMAP_BIASED,
} CELL_GCM_TEXTURE_UNSIGNED_REMAP;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_REMAP_FROM_A = 0,
	CELL_GCM_TEXTURE_REMAP_FROM_R = 1,
	CELL_GCM_TEXTURE_REMAP_FROM_G = 2,
	CELL_GCM_TEXTURE_REMAP_FROM_B = 3,
} CELL_GCM_TEXTURE_REMAP_FROM;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_REMAP_ORDER_XYXY = 0,
    CELL_GCM_TEXTURE_REMAP_ORDER_XXXY = 1,
} CELL_GCM_TEXTURE_REMAP_ORDER;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_REMAP_ZERO,
    CELL_GCM_TEXTURE_REMAP_ONE,
    CELL_GCM_TEXTURE_REMAP_REMAP,
} CELL_GCM_TEXTURE_REMAP_OUT;

typedef enum <byte>
{
    CELL_GCM_FALSE = 0,
    CELL_GCM_TRUE = 1,
} CELL_GCM_BOOL;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_ISO_LOW,
    CELL_GCM_TEXTURE_ISO_HIGH,
} CELL_GCM_TEXTURE_ISO;

typedef enum <byte>
{
    CELL_GCM_TEXTURE_ANISO_LOW,
    CELL_GCM_TEXTURE_ANISO_HIGH,
} CELL_GCM_TEXTURE_ANISO;

#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_OFFSET	(0x00000900)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_ADDRESS	(0x00000908)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_CONTROL0	(0x0000090c)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_CONTROL3	(0x00000910)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_FILTER	(0x00000914)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_IMAGE_RECT	(0x00000918)
#define	CELL_GCM_NV4097_SET_VERTEX_TEXTURE_BORDER_COLOR	(0x0000091c)
#define	CELL_GCM_NV4097_SET_TEXTURE_CONTROL2	(0x00000b00)
#define	CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM	(0x00000b80)
#define	CELL_GCM_NV4097_SET_VERTEX_DATA_ARRAY_OFFSET	(0x00001680)
#define	CELL_GCM_NV4097_INVALIDATE_VERTEX_FILE	(0x00001714)
#define	CELL_GCM_NV4097_SET_VERTEX_DATA_ARRAY_FORMAT	(0x00001740)
#define	CELL_GCM_NV4097_SET_BEGIN_END	(0x00001808)
#define	CELL_GCM_NV4097_SET_INDEX_ARRAY_ADDRESS	(0x0000181c)
#define	CELL_GCM_NV4097_DRAW_INDEX_ARRAY	(0x00001824)
#define	CELL_GCM_NV4097_SET_TEXTURE_CONTROL3	(0x00001840)
#define	CELL_GCM_NV4097_SET_TEXTURE_OFFSET	(0x00001a00)
#define	CELL_GCM_NV4097_SET_TEXTURE_FORMAT	(0x00001a04)
#define	CELL_GCM_NV4097_SET_TEXTURE_ADDRESS	(0x00001a08)
#define	CELL_GCM_NV4097_SET_TEXTURE_CONTROL0	(0x00001a0c)
#define	CELL_GCM_NV4097_SET_TEXTURE_CONTROL1	(0x00001a10)
#define	CELL_GCM_NV4097_SET_TEXTURE_FILTER	(0x00001a14)
#define	CELL_GCM_NV4097_SET_TEXTURE_IMAGE_RECT	(0x00001a18)
#define	CELL_GCM_NV4097_SET_TEXTURE_BORDER_COLOR	(0x00001a1c)
#define	CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM_LOAD	(0x00001e9c)
#define	CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM_START	(0x00001ea0)
#define	CELL_GCM_NV4097_SET_TRANSFORM_TIMEOUT	(0x00001ef8)
#define	CELL_GCM_NV4097_SET_TRANSFORM_CONSTANT_LOAD	(0x00001efc)
#define	CELL_GCM_NV4097_SET_VERTEX_ATTRIB_INPUT_MASK	(0x00001ff0)

typedef enum <int>
{
    CELL_GCM_METHOD_ADDRESS_VERTEX_PROGRAM_LOAD         = CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM_LOAD,
    CELL_GCM_METHOD_ADDRESS_VERTEX_PROGRAM_START        = CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM_START,
    CELL_GCM_METHOD_ADDRESS_VERTEX_PROGRAM              = CELL_GCM_NV4097_SET_TRANSFORM_PROGRAM,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TIMEOUT              = CELL_GCM_NV4097_SET_TRANSFORM_TIMEOUT,
    CELL_GCM_METHOD_ADDRESS_VERTEX_DATA_ARRAY_OFFSET    = CELL_GCM_NV4097_SET_VERTEX_DATA_ARRAY_OFFSET,
    CELL_GCM_METHOD_ADDRESS_VERTEX_DATA_ARRAY_FORMAT    = CELL_GCM_NV4097_SET_VERTEX_DATA_ARRAY_FORMAT,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_OFFSET       = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_OFFSET,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_ADDRESS      = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_ADDRESS,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_CONTROL0     = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_CONTROL0,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_FILTER       = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_FILTER,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_CONTROL3     = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_CONTROL3,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_IMAGE_RECT   = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_IMAGE_RECT,
    CELL_GCM_METHOD_ADDRESS_VERTEX_TEXTURE_BORDER_COLOR = CELL_GCM_NV4097_SET_VERTEX_TEXTURE_BORDER_COLOR,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_OFFSET              = CELL_GCM_NV4097_SET_TEXTURE_OFFSET,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_ADDRESS             = CELL_GCM_NV4097_SET_TEXTURE_ADDRESS,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_FILTER              = CELL_GCM_NV4097_SET_TEXTURE_FILTER,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_CONTROL0            = CELL_GCM_NV4097_SET_TEXTURE_CONTROL0,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_CONTROL1            = CELL_GCM_NV4097_SET_TEXTURE_CONTROL1,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_IMAGE_RECT          = CELL_GCM_NV4097_SET_TEXTURE_IMAGE_RECT,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_BORDER_COLOR        = CELL_GCM_NV4097_SET_TEXTURE_BORDER_COLOR,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_CONTROL2            = CELL_GCM_NV4097_SET_TEXTURE_CONTROL2,
    CELL_GCM_METHOD_ADDRESS_TEXTURE_CONTROL3            = CELL_GCM_NV4097_SET_TEXTURE_CONTROL3,
    CELL_GCM_METHOD_ADDRESS_INVALIDATE_VERTEX_FILE      = CELL_GCM_NV4097_INVALIDATE_VERTEX_FILE,
    CELL_GCM_METHOD_ADDRESS_INDEX_ARRAY_OFFSET          = CELL_GCM_NV4097_SET_INDEX_ARRAY_ADDRESS,
    CELL_GCM_METHOD_ADDRESS_BEGIN_END                   = CELL_GCM_NV4097_SET_BEGIN_END,
    CELL_GCM_METHOD_ADDRESS_DRAW_INDEX_ARRAY            = CELL_GCM_NV4097_DRAW_INDEX_ARRAY,
    CELL_GCM_METHOD_ADDRESS_VERTEX_CONSTANT_LOAD        = CELL_GCM_NV4097_SET_TRANSFORM_CONSTANT_LOAD,
    CELL_GCM_METHOD_ADDRESS_VERTEX_ATTRIB_INPUT_MASK	= CELL_GCM_NV4097_SET_VERTEX_ATTRIB_INPUT_MASK,

    CELL_GCM_NV4097_SET_CULL_FACE_ENABLE = 0x183c,
    CELL_GCM_NV4097_SET_DEPTH_FUNC = 0xa6c,
    CELL_GCM_NV4097_SET_ALPHA_TEST_ENABLE = 0x304,
} CELL_GCM_METHOD_OFFSET;

typedef struct
{
    int num : 14;
    CELL_GCM_METHOD_OFFSET method : 18 <format=hex>;
} CELL_GCM_METHOD;

#endif