//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: Gran Turismo 5 Course Map
//   Authors: Nenkai#9075, help from Xenn
//   Version: 
//   Purpose: Track Minimap Model Definition
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
// Notes: Also found in Course Data files (c0**x)

BitfieldDisablePadding();

typedef struct
{
    short X;
    short Y;
    short Z;
    short pad; // Always 00 FF

} Vertex <optimize=false>;

typedef struct
{
    short X1;
    short Y1;
    short X2;
    short Y2;
} Box;

typedef struct 
{
    signed byte ZIndexMaybe;
    byte unkFlag;
    short vertexCount : 16 <fgcolor=cGreen>;

    if (vertexCount > 0)
        Vertex verts[vertexCount];

} VertexMap <optimize=false, comment="Cast values to float, divide by 0.25f">;

struct MCourseMapFace
{
    struct Header
    {
        char Magic[4];
        int VersionMaybe;
        byte a;
        byte b;
        byte c;
        byte d;
        int fileSize;
        
        byte OffCourseMapCount <fgcolor=cGreen>;
        int OffCourseMapOffset : 24 <format=hex, fgcolor=cRed>;
    
        byte RoadMapCount <fgcolor=cGreen>;
        int RoadMapOffset : 24 <format=hex, fgcolor=cRed>;
        
        byte PitlaneMapCount <fgcolor=cGreen>;
        int PitlaneMapOffset : 24 <format=hex, fgcolor=cRed>;
        
        byte SectionMapOffsetVertices <fgcolor=cGreen>;
        int SectionMapOffset : 24 <format=hex, fgcolor=cRed>;
    
        Box Bounds;
    
        byte RoadGT6FacesCount <fgcolor=cGreen>;
        int RoadGT6FacesOffset : 24 <format=hex, fgcolor=cRed>;
    
        float runtimeFloat1;
        float road_length; // According to adhoc function MCourseMapFace::road_length
        float runtimeFloat3;
    } header <bgcolor=cPurple>;

    if (header.OffCourseMapCount > 0)
    {
        FSeek(header.OffCourseMapOffset);
        VertexMap OffCourseVerts[header.OffcourseMapCount] <bgcolor=cDkGray>;
    }

    if (header.RoadMapCount > 0)
    {
        FSeek(header.RoadMapOffset);
        VertexMap RoadVerts[header.RoadMapCount] <bgcolor=cWhite>;
    }
    
    if (header.PitlaneMapCount > 0)
    {
        FSeek(header.PitlaneMapOffset);
        VertexMap PitlaneVerts[header.PitlaneMapCount] <bgcolor=cYellow>;
    }

    if (header.SectionMapOffset != 0)
    {
        FSeek(header.SectionMapOffset);
        VertexMap SectionVerts[1] <bgcolor=cBlack>;
    }

    if (header.RoadGT6FacesCount > 0)
    {   
        FSeek(header.RoadGT6FacesOffset);
        VertexMap RoadFacesGT6[header.RoadGT6FacesCount];
    }
} mmap <optimize=false>;
